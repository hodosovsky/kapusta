{"version":3,"file":"static/js/548.2ca7784e.chunk.js","mappings":"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","sources":["components/Reports/ReportsInfo/List/ReportsList.styled.jsx","components/Reports/ReportsInfo/List/ReportsList.jsx","components/Reports/ReportsInfo/Table/ReportsTable.jsx","components/Reports/ReportsInfo/ReportsInfo.styled.jsx","components/Reports/ReportsNav/Slider/ButtonsNextPrev/ButtonsNextPrev.styled.jsx","components/Reports/ReportsNav/Slider/ButtonsNextPrev/ButtonsNextPrev.jsx","components/Reports/ReportsInfo/ReportsInfo.jsx","components/Reports/ReportsNav/Slider/Slider.styled.jsx","components/Reports/ReportsNav/Slider/SliderUtils.jsx","components/Reports/ReportsNav/Slider/Calendar/Calendar.styled.jsx","components/Reports/ReportsNav/Slider/Calendar/Calendar.jsx","components/Reports/ReportsNav/Slider/Slider.jsx","components/Reports/ReportsNav/ReportsNav.styled.jsx","components/Reports/ReportsNav/ReportsNav.jsx","pages/ReportsPage/ReportsPage.styled.jsx","pages/ReportsPage/ReportsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport bgcForSvg from '../../../../images/reportsFiles/bgcForSvg.png';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0%;\n  padding: 0;\n  &.incomeList {\n    gap: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-grow: 1;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: calc((100% - 20px) / 3);\n  margin: 0%;\n  padding: 20px 0;\n  gap: 5px;\n  border-bottom: 1px solid black;\n\n  &.active {\n    fill: #ff751d;\n  }\n\n  @media screen and (min-width: 768px) {\n    border: none;\n    width: calc((100% - 64px) / 6);\n  }\n  &.income {\n    max-width: 90px;\n    flex-grow: 0;\n  }\n`;\nexport const ItemIncome = styled.li`\n  flex-grow: 1;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: calc((100% - 20px) / 3);\n  margin: 0%;\n  padding: 20px 0;\n  gap: 5px;\n  border-bottom: 1px solid black;\n\n  &.active {\n    fill: #ff751d;\n  }\n\n  @media screen and (min-width: 768px) {\n    border: none;\n    width: calc((100% - 64px) / 6);\n  }\n\n  max-width: 90px;\n  flex-grow: 0;\n`;\n\nexport const ItemSvg = styled.svg`\n  background-image: url(${bgcForSvg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 56px 46px;\n  cursor: pointer;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectReports } from 'redux/selectors';\nimport reportsIcon from '../../../../images/reportsFiles/reports.svg';\nimport { List, Item, ItemSvg, ItemIncome } from './ReportsList.styled';\nimport { useState, useEffect, useMemo } from 'react';\nimport { categoryOrkToEng } from 'hooks/useCategory';\nimport { filteredDataAction } from 'redux/reportsQuery/reportsQuery.slice';\n\nexport const ReportsList = ({ onChange }) => {\n  const [active, setActive] = useState('');\n  const { reports } = useSelector(selectReports);\n  const [data, setData] = useState({});\n  const dispatch = useDispatch();\n  const valueArr = [];\n\n  // const expensesData = reports?.expenses?.expensesData ?? {};\n\n  const expensesData = useMemo(\n    () => reports?.expenses?.expensesData ?? {},\n    [reports]\n  );\n\n  // const incomesData = reports?.incomes?.incomesData ?? {};\n  const incomesData = useMemo(\n    () => reports?.incomes?.incomesData ?? {},\n    [reports]\n  );\n\n  useEffect(() => {\n    if (onChange === 'expenses') {\n      setData(expensesData ?? {});\n      setActive('');\n    } else {\n      setData(incomesData ?? {});\n      setActive('');\n    }\n  }, [onChange, expensesData, incomesData]);\n\n  const clickEventHandler = event => {\n    setActive(event.currentTarget.id);\n    const filteredValueArr = valueArr.filter(\n      item => item[0].replace(/\\s+/g, '') === event.currentTarget.id\n    );\n    dispatch(filteredDataAction(filteredValueArr));\n  };\n  const entries = Object.entries(data) ?? [];\n  // const values = Object.values(data);\n\n  // setValueData(values);\n\n  // const incomesEnties = Object.entries(incomesData) ?? [];\n  return (\n    <div>\n      <List className={onChange === 'income' ? 'incomeList' : ''}>\n        {entries.map(item => {\n          const iconName = item[0].replace(/\\s+/g, '');\n          valueArr.push(item);\n          if (onChange === 'expenses') {\n            return (\n              <Item\n                key={iconName}\n                id={iconName}\n                onClick={clickEventHandler}\n                className={iconName === active ? 'active' : ''}\n              >\n                <p>{item[1].total}.00</p>\n                <ItemSvg width=\"56\" height=\"56\">\n                  <use href={`${reportsIcon}#${iconName}`}></use>\n                </ItemSvg>\n                <p>{categoryOrkToEng(item[0])}</p>\n              </Item>\n            );\n          } else if (onChange === 'income') {\n            return (\n              <ItemIncome\n                key={iconName}\n                id={iconName}\n                onClick={clickEventHandler}\n                className={iconName === active ? 'active' : ''}\n              >\n                <p>{item[1].total}.00</p>\n                <ItemSvg width=\"56\" height=\"56\">\n                  <use href={`${reportsIcon}#${iconName}`}></use>\n                </ItemSvg>\n                <p>{categoryOrkToEng(item[0])}</p>\n              </ItemIncome>\n            );\n          }\n          return <></>;\n        })}\n      </List>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { selectDataChart } from '../../../../redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { selectReports } from 'redux/selectors';\nChart.register(...registerables);\nChart.register(ChartDataLabels);\n\nexport const ReportsTable = ({ onChange }) => {\n  const [chartData, setChartData] = useState({\n    datasets: [],\n  });\n  const [keys, setKeys] = useState([]);\n  const [values, setValues] = useState([]);\n  const { reports } = useSelector(selectReports);\n  const [check, setCheck] = useState(false);\n  let myData = useSelector(selectDataChart);\n\n  useEffect(() => {\n    if (myData <= 0) {\n      if (onChange === 'expenses') {\n        setCheck(false);\n        const data = reports?.expenses?.expensesData;\n        if (data) {\n          let key = Object.keys(data);\n          let value = Object.values(data);\n\n          let total = value.map(el => {\n            return el.total;\n          });\n          let intervarId = setInterval(() => {\n            if (key.length !== 13 && total.length < 13) {\n              key.unshift('');\n              key.push('');\n              total.unshift(0);\n              total.push(0);\n            } else {\n              clearInterval(intervarId);\n              setKeys(key);\n              setValues(total);\n            }\n          });\n        }\n      } else if (onChange === 'income') {\n        setCheck(false);\n        const data = reports?.incomes?.incomesData;\n        if (data) {\n          let key = Object.keys(data);\n          let value = Object.values(data);\n\n          let total = value.map(el => {\n            return el.total;\n          });\n          let intervarId = setInterval(() => {\n            if (key.length !== 13 && total.length < 13) {\n              key.unshift('');\n              key.push('');\n              total.unshift(0);\n              total.push(0);\n            } else {\n              clearInterval(intervarId);\n              setKeys(key);\n              setValues(total);\n            }\n          });\n        }\n      }\n    }\n    return;\n  }, [\n    onChange,\n    reports?.expenses?.expensesData,\n    reports?.incomes?.incomesData,\n    myData,\n  ]);\n\n  useEffect(() => {\n    if (\n      myData.length <= 0 &&\n      keys.length !== 0 &&\n      values.length !== 0 &&\n      check\n    ) {\n      setKeys([]);\n      setValues([]);\n    }\n    if (myData.length > 0) {\n      let mimi = myData[0];\n      let key = Object.keys(mimi[1]);\n      let value = Object.values(mimi[1]);\n      key.shift();\n      value.shift();\n      if (key.length < 13 && value.length < 13) {\n        let intervarId = setInterval(() => {\n          if (key.length !== 13 && value.length < 13) {\n            key.unshift('');\n            key.push('');\n            value.unshift(0);\n            value.push(0);\n          } else {\n            clearInterval(intervarId);\n            if (keys !== key && values !== value) {\n              if (keys[6] !== key[6] && values[6] !== value[6]) {\n                setCheck(true);\n                setKeys(key);\n                setValues(value);\n              } else {\n                return;\n              }\n              return;\n            }\n          }\n        });\n      }\n    }\n  }, [myData, values, keys, check]);\n\n  const [chartOptions, setChartOptions] = useState({});\n  useEffect(() => {\n    setChartData({\n      labels: keys.map(el => el),\n      datasets: [\n        {\n          label: 'awd',\n          data: values.map(el => el),\n          backgroundColor: ['#FF751D', '#FFDAC0', '#FFDAC0'],\n          borderRadius: 10,\n          borderSkipped: 'start',\n\n          datalabels: {\n            color: '#52555F',\n            anchor: 'end',\n            align: 'top',\n            font: {\n              size: 10,\n            },\n            formatter: function (value, context) {\n              if (value === undefined || value === 0) {\n                return '';\n              }\n              return `${value} UAH`;\n            },\n          },\n        },\n      ],\n    });\n    setChartOptions({\n      animations: {\n        y: {\n          easing: 'easeInOutElastic',\n          from: ctx => {\n            if (ctx.type === 'data') {\n              if (ctx.mode === 'default' && !ctx.dropped) {\n                ctx.dropped = true;\n                return 0;\n              }\n            }\n          },\n        },\n      },\n      responsive: true,\n      plugins: {\n        legend: {\n          display: false,\n        },\n      },\n\n      scales: {\n        x: {\n          border: {\n            display: false,\n          },\n          beginAtZero: true,\n          ticks: {\n            display: true,\n            padding: 4,\n          },\n          grid: {\n            display: false,\n            drawOnChartArea: false,\n          },\n        },\n        y: {\n          grace: '20%',\n          border: {\n            display: false,\n          },\n          beginAtZero: true,\n          ticks: {\n            display: false,\n            count: 11,\n          },\n          grid: {\n            lineWidth: 2,\n            color: ctx => {\n              if (ctx.index !== 9 && ctx.index !== 10) {\n                return '#F5F6FB';\n              }\n            },\n          },\n        },\n      },\n    });\n  }, [keys, values]);\n  return (\n    <div>\n      <Bar\n        style={{ padding: '20px 120px ' }}\n        data={chartData}\n        options={chartOptions}\n        height={312}\n        width={758}\n      />\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: flex;\n  /* margin-bottom: 30px; */\n  border: 1px solid transparent;\n  border-radius: 20px;\n  background-color: #fff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n`\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  gap: 5px;\n  justify-content: center;\n  align-items: center;\n  padding: 20px 10px 25px 10px;\n  &:nth-child(2n)::before{\n    content:'';\n  position:absolute;\n  border-left:1px solid ;\n  left:0px;\n  bottom: 5px;\n  z-index: 1;\n  height:90%;\n  color: #E0E5EB;\n  @media screen and (min-width: 768px) {\n    height:80%;\n  }\n  }\n  @media screen and (min-width: 768px) {\n    padding: 16px 0;\n    flex-direction: row;\n    &:first-child{\n      padding-right: 20px;\n      justify-content: flex-end;\n    }\n    &:last-child{\n      padding-left: 20px;\n    justify-content: flex-start;\n  }\n    /* justify-content: space-around; */\n  }\n`\nexport const ItemText = styled.p`\nfont-weight: 700;\nfont-size: 14px;\nline-height: 1.14;\ncolor: #52555F;\n`\nexport const ItemExpenses = styled.span`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.14;\n   color: #E53935;\n`\nexport const ItemIncome = styled.span`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.14;\n  color: #407946;\n`\nexport const Box = styled.div`\n padding-top: 30px;\n @media screen and (min-width: 768px) {\n  padding: 20px 40px;\n  margin-top: 32px;\n   border-radius: 30px;\n   background-color: #fff;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 20px 205px;\n}\n`\n\nexport const Nav = styled.div`\nmargin: 0 auto;\n  align-items: center;\n  display: flex;\n\n  width: 130px;\n`\n// export const NavButton = styled.button`\n//    background-color: transparent;\n//   border: transparent;\n//   padding: 0%;\n//   padding-top: 3px;\n// `\nexport const NavText = styled.p`\nwidth: 120px;\ntext-align: center;\nfont-weight: 700;\nfont-size: 14px;\nline-height: 1.14;\nletter-spacing: 0.02em;\ntext-transform: uppercase;\ncolor: #000000;\n`\n// export const NavButton = styled.span`\n//   font-weight: 700;\n//   font-size: 14px;\n//   line-height: 1.14;\n//   color: #407946;\n// `","\nimport styled from \"styled-components\";\n\nexport const ButtonBox = styled.div`\nmargin-top: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nexport const Button = styled.button`\n  background-color: transparent;\n  border: transparent;\n  padding: 0%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`","import {\n    ButtonBox,\n    Button,\n    // SliderSvg,\n  } from './ButtonsNextPrev.styled';\n  import reports from '../../../../../images/reportsFiles/reports.svg';\n\nexport const ButtonsNextPrev = ({onButtonClick, children}) =>{\n\n    const handlerClick = event => {\n        const name = event.currentTarget.name;\n             onButtonClick(name)\n      };\n\n    return(\n        <ButtonBox>\n        <Button name=\"decrement\" onClick={handlerClick}>\n          <svg width=\"6\" height=\"12\">\n            <use href={`${reports}#icon-prev`}></use>\n          </svg>\n        </Button>\n            {children}\n        <Button name=\"increment\" onClick={handlerClick}>\n          <svg width=\"6\" height=\"12\">\n            <use href={`${reports}#icon-next`}></use>\n          </svg>\n        </Button>\n      </ButtonBox>\n    )\n}","import { ReportsList } from './List/ReportsList';\nimport { ReportsTable } from './Table/ReportsTable';\nimport { filteredDataAction } from 'redux/reportsQuery/reportsQuery.slice';\nimport {\n  List,\n  Item,\n  ItemText,\n  ItemExpenses,\n  ItemIncome,\n  Nav,\n  NavText,\n  Box,\n} from './ReportsInfo.styled';\n// import reports from '../../../images/reportsFiles/reports.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectReports } from 'redux/selectors';\nimport { useState } from 'react';\nimport { ButtonsNextPrev } from '../ReportsNav/Slider/ButtonsNextPrev/ButtonsNextPrev';\n\nexport const ReportsInfo = () => {\n  const { reports } = useSelector(selectReports);\n  const [budget, setBudget] = useState('expenses')\nconst dispatch = useDispatch()\n\n\n\nconst handleClick = () =>{\n      if(budget==='expenses'){\n        setBudget('income')\n        dispatch(filteredDataAction([]))\n        return\n      }\n      setBudget('expenses')\n      dispatch(filteredDataAction([]))\n}\n  return (\n    <div>\n      <List>\n        <Item>\n          <ItemText>Expenses:</ItemText>\n          <ItemExpenses>{reports?.expenses?.expenseTotal ?? 0}.00</ItemExpenses>\n        </Item>\n        <Item>\n          <ItemText>Income:</ItemText>\n          <ItemIncome>{reports?.incomes?.incomeTotal ?? 0}.00</ItemIncome>\n        </Item>\n      </List>\n\n      <Box>\n        <Nav className='Privet'>\n          <ButtonsNextPrev onButtonClick={handleClick}>\n          <NavText>{budget}</NavText>\n          </ButtonsNextPrev>\n        </Nav>\n\n        <ReportsList onChange={budget}></ReportsList>\n      </Box>\n      <ReportsTable onChange={budget}></ReportsTable>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const SliderBox = styled.div`\n  padding-top: 16px;\n  text-align: center;\n  position: relative;\n  @media screen and (min-width: 768px){\n  padding-top: 0;\n  }\n`\n\nexport const SliderText = styled.button`\n   font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  padding: 0 5px;\n  border: none;\n  color: #000000;\n\n`\n","const dateNow = new Date();\n\nexport const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\nexport  const getMonth =()=>{\n    return dateNow.getMonth()\n}\nexport  const getYear =()=>{\n    return dateNow.getFullYear()\n}","import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\n    z-index: 2;\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0%;\n    background-color:rgba(0, 0, 0, 0.5);\n    \n`\n\nexport const CalendarBox = styled.div`\n    position: absolute;\n    background-color: #fff;\n    z-index: 10;\n    width: 60%;\n    border-radius: 20px;\n    padding: 10px 0;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) ;\n\n`\n\nexport const Month = styled.li`\nfont-weight: 700;\nfont-size: 14px;\nline-height: 1.22;\ncolor: #52555F;\n&.active{\n    color: #FF751D;\n}\n`\n\nexport const Year = styled.p`\nfont-weight: 700;\nfont-size: 14px;\nline-height: 16px;\nletter-spacing: 0.02em;\ncolor: #000000;\npadding: 0 10px;\n`","\nimport { monthNames } from \"../SliderUtils\"\nimport { ButtonsNextPrev } from \"../ButtonsNextPrev/ButtonsNextPrev\"\nimport { Month, Year, CalendarBox, Backdrop } from './Calendar.styled'\nimport { useEffect } from \"react\"\n\nexport const Calendar = ({onClose, currentMonth, currentYear, onChangeDate})=>{\n\nconst handleYear = (name)=>{\nonChangeDate(name)\n}\nconst handleMonth = (event)=>{\nconst choosedMonth = event.currentTarget.textContent\nconst name = monthNames.indexOf(choosedMonth)\nonChangeDate(name)\n}\n\nuseEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return ()=>{\n       window.removeEventListener('keydown', handleKeyDown);\n    }\n  });\n\nconst handleBackdrop = (event) =>{\n    if (event.target === event.currentTarget) {\n        onClose();\n      }\n}\nconst handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\nreturn(\n    <Backdrop onClick={handleBackdrop}>\n    <CalendarBox>\n        <ButtonsNextPrev onButtonClick={handleYear}> <Year>{currentYear}</Year></ButtonsNextPrev>\n       \n        <ul>\n       { monthNames.map(el=>{\n        return( \n            <Month className={el === currentMonth ?  'active' : ''} onClick={handleMonth} key={el}>{el}</Month>\n        )\n       })}\n        </ul>\n    </CalendarBox>\n    </Backdrop>\n)\n}","import { SliderBox, SliderText } from './Slider.styled';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { monthNames, getMonth, getYear } from './SliderUtils';\nimport { Calendar } from './Calendar/Calendar';\nimport { ButtonsNextPrev } from './ButtonsNextPrev/ButtonsNextPrev';\n\nimport { useDispatch } from 'react-redux';\nimport { getReports } from 'redux/reports/operations';\nimport { reportsQueryAction } from 'redux/reportsQuery/reportsQuery.slice';\nimport { filteredDataAction } from 'redux/reportsQuery/reportsQuery.slice';\n\nexport const Slider = () => {\n  const [monthNumber, setMonthNumber] = useState(0);\n  const [month, setMonth] = useState('');\n  const [year, setYear] = useState('');\n  const [modalCalendar, setModalCalendar] = useState(false);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setMonthNumber(getMonth());\n    setMonth(monthNames[getMonth()]);\n    setYear(getYear());\n  }, []);\n\n  useEffect(() => {\n    setMonth(monthNames[monthNumber]);\n    let monthString = '';\n\n    if (monthNumber + 1 < 10) {\n      monthString = '0' + (monthNumber + 1);\n    } else {\n      monthString = monthNumber + 1;\n    }\n    const query = `${year}-${monthString}`;\n    if (query !== '-01') dispatch(getReports(query));\n    dispatch(reportsQueryAction(`${year}-${monthString}`));\n    // getPeriodDataAPI(`${year}-${monthString}`).then(data => {\n    //   setReports(data);\n    // });\n  }, [monthNumber, year, dispatch]);\n\n  const handlerClick = name => {\n    switch (name) {\n      case 'decrement':\n        dispatch(filteredDataAction([]));\n        setMonthNumber(monthNumber - 1);\n        if (monthNumber === 0) {\n          setMonthNumber(11);\n          setYear(year - 1);\n        }\n        break;\n      case 'increment':\n        dispatch(filteredDataAction([]));\n        setMonthNumber(monthNumber + 1);\n        if (monthNumber === 11) {\n          setMonthNumber(0);\n          setYear(year + 1);\n        }\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleModalCalendar = () => {\n    setModalCalendar(modalCalendar => !modalCalendar);\n  };\n\n  const handleCalendar = name => {\n    switch (name) {\n      case 'decrement':\n        setYear(year - 1);\n\n        break;\n      case 'increment':\n        setYear(year + 1);\n        break;\n      default:\n        setMonthNumber(name);\n        return;\n    }\n  };\n\n  return (\n    <SliderBox>\n      <p>Current period:</p>\n      <ButtonsNextPrev onButtonClick={handlerClick}>\n        <SliderText onClick={handleModalCalendar}>\n          {month} {year}\n        </SliderText>\n      </ButtonsNextPrev>\n      {modalCalendar && (\n        <Calendar\n          currentYear={year}\n          currentMonth={month}\n          onChangeDate={handleCalendar}\n          onClose={handleModalCalendar}\n        />\n      )}\n    </SliderBox>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ButtonBack = styled(Link)`\n  background-color: transparent;\n  border: transparent;\n  padding: 0%;\n\n  display: flex;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    width: calc(100% / 3);\n    padding-top: 0;\n  }\n`;\n\nexport const ButtonConfirm = styled.button`\n  @media screen and (min-width: 320px) {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n  @media screen and (min-width: 1280px) {\n    display: block;\n    font-size: 12px;\n    line-height: 1.16;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n\n    color: rgba(82, 85, 95, 0.7);\n    padding: 12px 30px;\n    border: 2px solid white;\n    border-radius: 16px;\n  }\n`;\nexport const ButtonBackText = styled.span`\n  /* @media screen and (min-width: 768px) { */\n  @media screen and (min-width: 320px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-left: 15px;\n    display: block;\n  }\n`;\n\nexport const PreBox = styled.div`\n  padding-top: 16px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    padding-top: 40px;\n    padding-bottom: 32px;\n  }\n`;\nexport const Box = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row-reverse;\n    width: calc((100% / 3) * 2);\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const Balance = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n  }\n`;\n\nexport const BalanceText = styled.p`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.16;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.02em;\n  margin-bottom: 8px;\n  color: rgba(82, 85, 95, 0.7);\n  padding-top: 32px;\n  @media screen and (min-width: 768px) {\n    padding-top: 0;\n    margin: 0;\n    padding-left: 33px;\n  }\n  @media screen and (min-width: 768px) {\n    padding-left: 15px;\n  }\n`;\n\nexport const BalanceAmounth = styled.p`\n  padding: 15px 29px;\n  border: 2px solid white;\n  border-radius: 20px;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.16;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #000000;\n  width: 183px;\n  margin-bottom: 32px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n    padding: 12px 0;\n    width: 123px;\n    border-radius: 16px;\n  }\n`;\n","import { Slider } from './Slider/Slider';\nimport {\n  Balance,\n  ButtonBack,\n  ButtonBackText,\n  BalanceText,\n  BalanceAmounth,\n  Box,\n  PreBox,\n  ButtonConfirm,\n} from './ReportsNav.styled';\nimport reports from '../../../images/reportsFiles/reports.svg';\nimport { useSelector } from 'react-redux';\nimport { selectBalance } from 'redux/selectors';\nimport { useLocation } from 'react-router';\n\nexport const ReportsNav = () => {\n  const balance = useSelector(selectBalance);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  return (\n    <PreBox>\n      <ButtonBack to={backLinkHref}>\n        <svg width=\"24\" height=\"24\">\n          <use href={`${reports}#icon-back`}></use>\n        </svg>\n        <ButtonBackText>Go back</ButtonBackText>\n      </ButtonBack>\n      <Box>\n        <Slider />\n\n        <Balance>\n          <BalanceText>Balance:</BalanceText>\n          <BalanceAmounth>{balance ?? 0}.00 UAH</BalanceAmounth>\n          <ButtonConfirm type=\"button\">Confirm</ButtonConfirm>\n        </Balance>\n      </Box>\n    </PreBox>\n  );\n};\n","import styled from \"styled-components\";\nimport backgroundMobile from '../../images/reportsFiles/backgroundMobile.png'\nimport backgroundTablet from '../../images/reportsFiles/backgroundTablet.png'\nimport backgroundDesktop from '../../images/reportsFiles/backgroundDesktop.png'\nexport const BoxBg = styled.div`\n    background-image: url(${backgroundMobile});\n  background-position: top;\n  background-repeat: no-repeat;\n  background-size: 100%;\npadding: 0 20px;\n  @media screen and (min-width: 768px) {\n    /* margin: 0 32px; */\n    padding: 0 32px;\n    background-image: url(${backgroundTablet});\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 0 123px;\n    background-image: url(${backgroundDesktop});\n  }\n  \n`","import React from 'react';\nimport { ReportsInfo } from 'components/Reports/ReportsInfo/ReportsInfo';\nimport { ReportsNav } from 'components/Reports/ReportsNav/ReportsNav';\nimport { BoxBg } from './ReportsPage.styled';\n\nexport default function ReportsPage() {\n  return (\n    <BoxBg>\n      <ReportsNav/>\n      <ReportsInfo/>\n    </BoxBg>\n  );\n}\n"],"names":["List","styled","Item","ItemIncome","ItemSvg","bgcForSvg","ReportsList","onChange","useState","active","setActive","reports","useSelector","selectReports","data","setData","dispatch","useDispatch","valueArr","expensesData","useMemo","expenses","incomesData","incomes","useEffect","clickEventHandler","event","currentTarget","id","filteredValueArr","filter","item","replace","filteredDataAction","entries","Object","className","map","iconName","push","onClick","total","width","height","href","reportsIcon","categoryOrkToEng","Chart","registerables","ChartDataLabels","ReportsTable","datasets","chartData","setChartData","keys","setKeys","values","setValues","check","setCheck","myData","selectDataChart","key","el","intervarId","setInterval","length","unshift","clearInterval","mimi","value","shift","chartOptions","setChartOptions","labels","label","backgroundColor","borderRadius","borderSkipped","datalabels","color","anchor","align","font","size","formatter","context","undefined","animations","y","easing","from","ctx","type","mode","dropped","responsive","plugins","legend","display","scales","x","border","beginAtZero","ticks","padding","grid","drawOnChartArea","grace","count","lineWidth","index","style","options","ItemText","ItemExpenses","Box","Nav","NavText","ButtonBox","Button","ButtonsNextPrev","onButtonClick","children","handlerClick","name","ReportsInfo","budget","setBudget","expenseTotal","incomeTotal","SliderBox","SliderText","dateNow","Date","monthNames","getMonth","Backdrop","CalendarBox","Month","Year","Calendar","onClose","currentMonth","currentYear","onChangeDate","handleMonth","choosedMonth","textContent","indexOf","window","addEventListener","handleKeyDown","removeEventListener","code","target","Slider","monthNumber","setMonthNumber","month","setMonth","year","setYear","modalCalendar","setModalCalendar","getFullYear","monthString","query","getReports","reportsQueryAction","handleModalCalendar","ButtonBack","Link","ButtonConfirm","ButtonBackText","PreBox","Balance","BalanceText","BalanceAmounth","ReportsNav","balance","selectBalance","backLinkHref","useLocation","state","to","BoxBg","backgroundMobile","backgroundTablet","backgroundDesktop","ReportsPage"],"sourceRoot":""}